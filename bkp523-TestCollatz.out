==551== Memcheck, a memory error detector
==551== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==551== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==551== Command: ./TestCollatz
==551== 
Running main() from gtest_main.cc
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (32 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (5 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (6 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.collatz_cycle_length_1
[       OK ] CollatzFixture.collatz_cycle_length_1 (3 ms)
[ RUN      ] CollatzFixture.collatz_cycle_length_2
[       OK ] CollatzFixture.collatz_cycle_length_2 (3 ms)
[ RUN      ] CollatzFixture.collatz_cycle_length_3
[       OK ] CollatzFixture.collatz_cycle_length_3 (3 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (11 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (5 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (8 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (47 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (5 ms)
[----------] 16 tests from CollatzFixture (163 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (238 ms total)
[  PASSED  ] 16 tests.
==551== 
==551== HEAP SUMMARY:
==551==     in use at exit: 72,704 bytes in 1 blocks
==551==   total heap usage: 298 allocs, 297 frees, 140,700 bytes allocated
==551== 
==551== LEAK SUMMARY:
==551==    definitely lost: 0 bytes in 0 blocks
==551==    indirectly lost: 0 bytes in 0 blocks
==551==      possibly lost: 0 bytes in 0 blocks
==551==    still reachable: 72,704 bytes in 1 blocks
==551==         suppressed: 0 bytes in 0 blocks
==551== Rerun with --leak-check=full to see details of leaked memory
==551== 
==551== For counts of detected and suppressed errors, rerun with: -v
==551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 35
Branches executed:100.00% of 24
Taken at least once:83.33% of 24
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'
