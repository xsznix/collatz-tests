==5258== Memcheck, a memory error detector
==5258== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==5258== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==5258== Command: ./TestCollatz
==5258== 
Running main() from gtest_main.cc
[==========] Running 22 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 22 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (21 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (3 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (2 ms)
[ RUN      ] CollatzFixture.switch_1
[       OK ] CollatzFixture.switch_1 (3 ms)
[ RUN      ] CollatzFixture.switch_2
[       OK ] CollatzFixture.switch_2 (2 ms)
[ RUN      ] CollatzFixture.switch_3
[       OK ] CollatzFixture.switch_3 (2 ms)
[ RUN      ] CollatzFixture.switch_4
[       OK ] CollatzFixture.switch_4 (2 ms)
[ RUN      ] CollatzFixture.cycle_count_1
[       OK ] CollatzFixture.cycle_count_1 (2 ms)
[ RUN      ] CollatzFixture.cycle_count_2
[       OK ] CollatzFixture.cycle_count_2 (2 ms)
[ RUN      ] CollatzFixture.cycle_count_3
[       OK ] CollatzFixture.cycle_count_3 (2 ms)
[ RUN      ] CollatzFixture.cycle_count_4
[       OK ] CollatzFixture.cycle_count_4 (2 ms)
[ RUN      ] CollatzFixture.cycle_count_5
[       OK ] CollatzFixture.cycle_count_5 (2 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (7 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (6 ms)
[----------] 22 tests from CollatzFixture (115 ms total)

[----------] Global test environment tear-down
[==========] 22 tests from 1 test case ran. (168 ms total)
[  PASSED  ] 22 tests.
==5258== 
==5258== HEAP SUMMARY:
==5258==     in use at exit: 72,704 bytes in 1 blocks
==5258==   total heap usage: 321 allocs, 320 frees, 147,573 bytes allocated
==5258== 
==5258== LEAK SUMMARY:
==5258==    definitely lost: 0 bytes in 0 blocks
==5258==    indirectly lost: 0 bytes in 0 blocks
==5258==      possibly lost: 0 bytes in 0 blocks
==5258==    still reachable: 72,704 bytes in 1 blocks
==5258==         suppressed: 0 bytes in 0 blocks
==5258== Rerun with --leak-check=full to see details of leaked memory
==5258== 
==5258== For counts of detected and suppressed errors, rerun with: -v
==5258== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 41
Branches executed:100.00% of 28
Taken at least once:82.14% of 28
Calls executed:100.00% of 15
Creating 'Collatz.c++.gcov'
